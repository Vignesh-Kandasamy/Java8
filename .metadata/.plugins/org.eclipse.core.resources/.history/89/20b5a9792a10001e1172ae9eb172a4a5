package com.example1;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.function.LongUnaryOperator;
import java.util.stream.Collectors;

public class Practice 
{
	public static void main(String args[])
	{
		//Removing duplicate from list of integer - method1
		
		List<Integer> list = Arrays.asList(4,8,2,1,5,3,8);
		Set<Integer> set =new HashSet<Integer>();
		
		for(int num : list)
		{
			set.add(num);
		}
		System.out.println("After removing duplicates - "+set);
		
		//method2
		
		List<Integer> list1 = Arrays.asList(4,8,2,1,5,3,8);
		List<Integer> removedDup = new ArrayList<Integer>();
		list1.stream().distinct().forEach(removedDup::add);
		System.out.println("After removing duplicates - "+removedDup);
		list1.stream().distinct().forEach(System.out::print); //for directly printing
		
		
		//Factorial of a number
				
		LongUnaryOperator num= n->{
			int result=1;
			for(int i=1; i<=n;i++)
			{
				result=result*i;
			}
			System.out.println(result);
			return result;
		};
		
		int no=5;
		long factorial_result = num.applyAsLong(no);
		System.out.println(factorial_result);
		
		
		//Find all the even numbers in the list using stream API
		
		List<Integer> numbers= Arrays.asList(2,5,4,88,34,1,31,72);
		
		numbers.stream().filter(n->n%2==0).forEach(System.out::print);
		
		//Given a list of integers, find out all the numbers starting with 1 using stream functions
		
		List<Integer> numbers1= Arrays.asList(2,5,14,88,34,1,31,172);
		
		List<String> num1= numbers1.stream().map(s->s+"").filter(s->s.startsWith("1")).collect(Collectors.toList());
		System.out.println(num1);
		
	}
}
